<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprHeadRot = 0;
sprTorsoRot = 0;

sprArm1Rot = 0;
sprArm1OffsetRot = 0;
sprArm2Rot = 0;
sprArm2OffsetRot = 0;

sprLeg1Rot = 0;
sprLeg2Rot = 0;

sprHeadOffsetX = 0;
sprTorsoOffsetX = 0;
sprLegsOffsetX = 0;
sprArmsOffsetX = 0;

sprHeadOffsetY = 0;
sprTorsoOffsetY = 0;
sprLegsOffsetY = 0;
sprArmsOffsetY = 0;

sprHeadColor = c_white;
sprTorsoColor = c_white;
sprArmsColor = c_white;
sprLegsColor = c_white;

moving = false;
movingDir = "Left";

//0 is not swinging, 1 is swinging positively, 2 is swinging negatively
sprArm1Swing = 0;
sprArm2Swing = 0;
sprLeg1Swing = 0;
sprLeg2Swing = 0;

swingBeat = 1;
override = false;

maxRot = 40;
swingSpeed = 4;

handsSeperate = false;

//-1 means done, not moving to anything.
MoveTo = -1;
moveTo = -1;
moveSpeed = 8;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>MoveTo alarm : UserDefined3/Self</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (moveTo &lt; x) {
    x -= moveSpeed;
    if (moveTo &gt; x)
        x = moveTo;
}

if (moveTo &gt; x) {
    x += moveSpeed;
    if (moveTo &lt; x)
        x = moveTo;
}

if (moveTo != x) {
    alarm[0] = 1;
} else {
    moveTo = -1;
    MoveTo = -1;
    event_user(2);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!override) {
    if (moving) {
        if (sprArm1Swing == 1) {
            sprArm1Rot += swingSpeed;
        } else {
            sprArm1Rot -= swingSpeed;
        }
        
        if (sprArm2Swing == 1) {
            sprArm2Rot += swingSpeed;
        } else {
            sprArm2Rot -= swingSpeed;
        }
        
        if (sprLeg1Swing == 1) {
            sprLeg1Rot += swingSpeed;
        } else {
            sprLeg1Rot -= swingSpeed;
        }
        
        if (sprLeg2Swing == 1) {
            sprLeg2Rot += swingSpeed;
        } else {
            sprLeg2Rot -= swingSpeed;
        }
        
        if (abs(sprArm1Rot) &gt;= maxRot) {
            if (sprArm1Swing == 1) {
                sprArm1Swing = 2;
                swingBeat = 2;
            } else {
                sprArm1Swing = 1;
                swingBeat = 1;
            }
        }
        
        if (abs(sprArm2Rot) &gt;= maxRot) {
            if (sprArm2Swing == 1)
                sprArm2Swing = 2;
            else
                sprArm2Swing = 1;
        }
        
        if (abs(sprLeg1Rot) &gt;= maxRot) {
            if (sprLeg1Swing == 1)
                sprLeg1Swing = 2;
            else
                sprLeg1Swing = 1;
        }
        
        if (abs(sprLeg2Rot) &gt;= maxRot) {
            if (sprLeg2Swing == 1)
                sprLeg2Swing = 2;
            else
                sprLeg2Swing = 1;
        }
    } else if (!moving) {
        if (abs(sprArm1Rot) &lt; maxRot) {
            if (abs(sprArm1Rot) &gt; 0) {
                if (sprArm1Rot &gt; 0)
                    sprArm1Rot -= swingSpeed;
                else 
                    sprArm1Rot += swingSpeed;
            }
        } else {
            sprArm1Rot += swingSpeed;
        }
        
        if (abs(sprArm2Rot) &lt; maxRot) {
             if (abs(sprArm2Rot) &gt; 0) {
                if (sprArm2Rot &gt; 0)
                    sprArm2Rot -= swingSpeed;
                else 
                    sprArm2Rot += swingSpeed;
             }
        } else {
            sprArm2Rot -= swingSpeed;
        }
         
         if (abs(sprLeg1Rot) &gt; 0) {   
            if (sprLeg1Rot &gt; 0)
                sprLeg1Rot -= swingSpeed;
            else 
                sprLeg1Rot += swingSpeed;
         }
         
          if (abs(sprLeg2Rot) &gt; 0) {        
            if (sprLeg2Rot &gt; 0)
                sprLeg2Rot -= swingSpeed;
            else 
                sprLeg2Rot += swingSpeed;
        }
    }

    if (image_alpha &lt; 1)
        image_alpha += 2/room_speed;
    
    if (abs(sprArm1OffsetRot) &gt; 0) {
        if (sprArm1OffsetRot &gt; 0) {
            sprArm1OffsetRot -= swingSpeed;
            if (sprArm1OffsetRot &lt; swingSpeed) {
                sprArm1OffsetRot = 0;
            }
        } else if (sprArm1OffsetRot &lt; 0) {
            sprArm1OffsetRot += swingSpeed;
            if (sprArm1OffsetRot &gt; -swingSpeed) {
                sprArm1OffsetRot = 0;
            }
        }
    }
    
    if (abs(sprArm2OffsetRot) &gt; 0) {
        if (sprArm2OffsetRot &gt; 0) {
            sprArm2OffsetRot -= swingSpeed;
            if (sprArm2OffsetRot &lt; swingSpeed) {
                sprArm2OffsetRot = 0;
            }
        } else if (sprArm2OffsetRot &lt; 0) {
            sprArm2OffsetRot += swingSpeed;
            if (sprArm2OffsetRot &gt; -swingSpeed) {
                sprArm2OffsetRot = 0;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>MoveTo method</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Moving to position MoveTo
if (!moving) {
    moveTo = MoveTo;
    if (moveTo &lt; x) {
        event_user(0);
    } else {
        event_user(1);
    }
    alarm[0] = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Stop Moving Command</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Stop Moving
moving = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Move Right Command</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Move Right
if (movingDir = "Left") {
    var tempArm1 = sprArm1Rot;
    var tempLeg1 = sprLeg1Rot;
    
    sprArm1Rot = sprArm2Rot;
    sprArm2Rot = tempArm1;
    
    sprLeg1Rot = sprLeg2Rot;
    sprLeg2Rot = tempLeg1;
}

movingDir = "Right"
moving = true;

if (swingBeat == 1) {
    sprArm1Swing = 2;
    sprArm2Swing = 1;
    sprLeg1Swing = 2;
    sprLeg2Swing = 1;
} else {
    sprArm1Swing = 1;
    sprArm2Swing = 2;
    sprLeg1Swing = 1;
    sprLeg2Swing = 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Move Left Command</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Move Left
if (movingDir = "Right") {
    var tempArm1 = sprArm1Rot;
    var tempLeg1 = sprLeg1Rot;
    
    sprArm1Rot = sprArm2Rot;
    sprArm2Rot = tempArm1;
    
    sprLeg1Rot = sprLeg2Rot;
    sprLeg2Rot = tempLeg1;
}

movingDir = "Left"
moving = true;

if (swingBeat == 1) {
    sprArm1Swing = 1;
    sprArm2Swing = 2;
    sprLeg1Swing = 1;
    sprLeg2Swing = 2;
} else {
    sprArm1Swing = 2;
    sprArm2Swing = 1;
    sprLeg1Swing = 2;
    sprLeg2Swing = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var xScale = 1;

var leg1Rot = sprLeg1Rot;
var leg2Rot = sprLeg2Rot;
var arm1Rot = sprArm1Rot + sprArm1OffsetRot;
var arm2Rot = sprArm2Rot + sprArm2OffsetRot;

if (movingDir == "Right") {
    xScale = -1;
}
    

draw_sprite_ext(sprArms, sprArmsIndex, x + sprArmsOffsetX, y + sprArmsOffsetY, xScale, 1, arm1Rot, sprArmsColor, image_alpha);
if (handsSeperate) 
    draw_sprite_ext(sprHands, 0, x + sprArmsOffsetX, y + sprArmsOffsetY, xScale, 1, arm1Rot, c_white, image_alpha);
draw_sprite_ext(sprLegs, sprLegsIndex, x + sprLegsOffsetX, y + sprLegsOffsetY, xScale, 1, leg1Rot, sprLegsColor, image_alpha);
draw_sprite_ext(sprLegs, sprLegsIndex, x + sprLegsOffsetX, y + sprLegsOffsetY, xScale, 1, leg2Rot, sprLegsColor, image_alpha);
draw_sprite_ext(sprTorso, sprTorsoIndex, x + sprTorsoOffsetX, y + sprTorsoOffsetY, xScale, 1, sprTorsoRot, sprTorsoColor, image_alpha);
draw_sprite_ext(sprArms, sprArmsIndex, x + sprArmsOffsetX, y + sprArmsOffsetY, xScale, 1, arm2Rot, sprArmsColor, image_alpha);
if (handsSeperate) 
    draw_sprite_ext(sprHands, 0, x + sprArmsOffsetX, y + sprArmsOffsetY, xScale, 1, arm2Rot, c_white, image_alpha);
draw_sprite_ext(sprHead, sprHeadIndex, x + sprHeadOffsetX, y + sprHeadOffsetY, xScale, 1, sprHeadRot, sprHeadColor, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
