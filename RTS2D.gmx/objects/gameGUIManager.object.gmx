<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//pixel size of buttons
sprSize = 192

//amount of buttons
buttons = 3;

button_indexes[0] = 2;
button_indexes[1] = 4;
button_indexes[2] = 6;

buttonClicked = -1;

openInterface = 0;

//top gui view
view_xview[1] = 0;
view_yview[1] = -sprSize;
view_hview[1] = sprSize;
view_wview[1] = sprSize * buttons;

view_xport[1] = 0;
view_yport[1] = 0;
view_hport[1] = sprSize/2;
view_wport[1] = (sprSize * buttons)/2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if mouse_check_button_pressed(mb_left) {
    if (mouse_x - view_xview[1] &gt;= 0 &amp;&amp; mouse_x - view_xview[1]  &lt;= sprSize * buttons &amp;&amp; mouse_y - view_yview[1] &gt;= 0 &amp;&amp; mouse_y - view_yview[1] &lt;= sprSize) {
        if (buttonClicked == floor((mouse_x - view_xview[1]) / sprSize)) {
            button_indexes[buttonClicked]--;
            buttonClicked = -1;
            if (openInterface != 0) {
                with openInterface {instance_destroy();}
                tapHandler.scrollable = true;
                openInterface = 0 ;
            }
        } else {
            if (buttonClicked != -1) {
                button_indexes[buttonClicked]--;
                if (openInterface != 0) {
                    with openInterface {instance_destroy();}
                    tapHandler.scrollable = true;
                    openInterface = 0 ;
                }
            }
            buttonClicked = floor((mouse_x - view_xview[1]) / sprSize);
            button_indexes[buttonClicked] += 1;
            if (buttonClicked == 0) {     
                if (tapHandler.zoomed == true) {
                    tapHandler.zoomOut = true;
                }
                tapHandler.scrollable = false;
                openInterface = instance_create(0,0,inventoryInterface);
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(gameGUI, button_indexes[0], view_xview[1],view_yview[1])
draw_sprite(gameGUI, button_indexes[1], view_xview[1] + sprSize , view_yview[1])
draw_sprite(gameGUI, button_indexes[2], view_xview[1] + sprSize * 2, view_yview[1])
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
