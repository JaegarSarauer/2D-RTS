<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//the recorded position of a click
clickX = 0;
clickY = 0;
change = 0;
curViewX = 0;

zoomed = false


curHView = 0;
curWView = 0;
curXView = view_xview;
curYView = view_yview;
zoomX = 0
zoomY=0;
zooming = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>view_hview[0] += curHView * .1;
view_wview[0] += curWView * .1;
view_xview += ((zoomX - curWView) - curXView) / 10
view_yview += ((zoomY - curHView) - curYView) / 10
view_xview = max(0, min(view_xview, room_width - view_wview))
view_yview = max(0, min(view_yview, room_height - view_hview))
zooming--;
if zooming &gt; 0
alarm[1] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>view_hview[0] -= curHView *.05;
view_wview[0] -= curWView * .05;
view_xview += ((zoomX - curWView/4) - curXView) / 10
view_yview += ((zoomY - curHView/4) - curYView) / 10
view_xview = max(0, min(view_xview, room_width - view_wview))
view_yview = max(0, min(view_yview, room_height - view_hview))
zooming--;
if zooming &gt; 0
alarm[0] = 1;




/*


view_xview = (zoomX - view_wview[0] /2)
view_yview = (zoomY - view_hview[0] /2)*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if mouse_check_button_pressed(mb_left) {
    clickX = mouse_x
    clickY = mouse_y
}

if mouse_check_button_released(mb_right) &amp;&amp; zooming = 0 {
    if (zoomed == false) {
        zooming = 10
        curXView = view_xview;
        curYView = view_yview;
        curHView = view_hview[0];
        curWView = view_wview[0];
        zoomX = mouse_x
        zoomY = mouse_y
        alarm[0] = 1;
        zoomed = true;
    } else {
        zooming = 10
        curHView = view_hview[0];
        curWView = view_wview[0];
        curXView = view_xview;
        curYView = view_yview;
        zoomX = mouse_x
        zoomY = mouse_y
        alarm[1] = 1;
        zoomed = false;
    }
}


if mouse_check_button(mb_left) {
    view_xview = clickX - (mouse_x - view_xview)
    view_xview = max(0, min(view_xview, room_width - view_wview))
    if (zoomed) {
        view_yview = clickY - (mouse_y - view_yview)
        view_yview = max(0, min(view_yview, room_height - view_hview))
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if mouse_check_button(mb_left) &amp;&amp; global.DEBUGGING {
    draw_text(floor(mouse_x/64) * 64, mouse_y - 20, worldManager.worldObjects[| floor(mouse_x/64)]);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
